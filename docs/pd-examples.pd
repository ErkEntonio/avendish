#N canvas 1133 254 1258 554 12;
#X obj 34 92 avnd_addition;
#X floatatom 34 64 5 0 0 0 - - - 0;
#X floatatom 122 64 5 0 0 0 - - - 0;
#X obj 34 125 print;
#X obj 421 261 avnd_lowpass;
#X obj 421 351 dac~;
#X msg 421 134 Weight \$1;
#X obj 424 102 hsl 128 15 0 1 0 0 empty empty empty -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 446 161 phasor~ 200;
#X obj 447 226 avnd_persample_1;
#X msg 563 172 Gain 10;
#X msg 563 195 Gain 50;
#X msg 564 150 Gain 1;
#X obj 853 66 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000;
#X obj 853 124 print;
#X obj 853 94 avnd_init 456 yeah;
#X text 30 35 Addition.hpp: showcases a basic message processor;
#X text 846 33 Example of handling init arguments (Init.hpp);
#X obj 846 315 avnd_messages;
#X msg 846 203 member 1 3 foo;
#X msg 870 265 lambda_function;
#X msg 860 235 function 100;
#X obj 819 290 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 846 344 print;
#X text 839 172 Example of handling various messages (Messages.hpp)
;
#X text 417 32 In pd \, multi-channel must be handled by hand :-D still
\, notice that Lowpass.hpp implements per-buffer processing while PerSampleProcessor.hpp
processes per-sample.;
#X obj 848 443 avnd_callback;
#X floatatom 913 410 5 0 0 0 - - - 0;
#X msg 848 410 work;
#X floatatom 848 476 5 0 0 0 - - - 0;
#X floatatom 936 477 5 0 0 0 - - - 0;
#X obj 445 302 avnd_helpers_lowpass;
#X obj 31 273 avnd_random;
#X obj 31 245 metro 100;
#X obj 31 218 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X floatatom 31 299 5 0 0 0 - - - 0;
#X text 26 192 Random.hpp: showcases a basic message generator;
#X text 462 325 Helper types allow the exact same thing with a simpler
C++ code;
#X text 848 387 Example of handling callbacks (Callbacks.hpp);
#X connect 0 0 3 0;
#X connect 1 0 0 0;
#X connect 2 0 0 1;
#X connect 4 0 5 0;
#X connect 6 0 4 0;
#X connect 6 0 31 0;
#X connect 7 0 6 0;
#X connect 8 0 9 0;
#X connect 9 0 4 0;
#X connect 9 0 31 0;
#X connect 10 0 9 0;
#X connect 11 0 9 0;
#X connect 12 0 9 0;
#X connect 13 0 15 0;
#X connect 15 0 14 0;
#X connect 18 0 23 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 21 0 18 0;
#X connect 22 0 18 0;
#X connect 26 0 29 0;
#X connect 26 1 30 0;
#X connect 27 0 26 0;
#X connect 28 0 26 0;
#X connect 31 0 5 1;
#X connect 32 0 35 0;
#X connect 33 0 32 0;
#X connect 34 0 33 0;
